diff --git a/lib/Makefile b/lib/Makefile
index 7147512..d8b18de 100644
--- a/lib/Makefile
+++ b/lib/Makefile
@@ -5,11 +5,64 @@
 # specific to GNU make. If you don't have GNU make, remove this file
 # and rename "Makefile.std" in this directory to "Makefile".
 #
-include ../Makefile.inc
+
+# Makefile.inc - common definitions used by all makefiles
+
+TLPI_DIR = ..
+TLPI_LIB = ${TLPI_DIR}/libtlpi.a
+TLPI_INCL_DIR = ${TLPI_DIR}/lib
+
+LINUX_LIBRT = -lrt
+LINUX_LIBDL = -ldl
+LINUX_LIBACL = -lacl
+LINUX_LIBCRYPT = -lcrypt
+LINUX_LIBCAP = -lcap
+
+# "-Wextra" is a more descriptive synonym for "-W", but only
+# available in more recent gcc versions
+
+# Defining _DEFAULT_SOURCE is a workaround to avoid the warnings that
+# would otherwise be produced when compiling code that defines _BSD_SOURCE
+# or _SVID_SOURCE against glibc headers in version 2.20 and later.
+# (The alternative would be to replace each instance of "#define _SVID_SOURCE"
+# or "#define _BSD_SOURCE" in the example programs with
+# "#define _DEFAULT_SOURCE".)
+
+IMPL_CFLAGS = -std=c99 -D_XOPEN_SOURCE=600 \
+		-D_DEFAULT_SOURCE \
+		-g -I${TLPI_INCL_DIR} \
+		-pedantic \
+		-Wall \
+		-W \
+		-Wmissing-prototypes \
+		-Wno-sign-compare \
+		-Wimplicit-fallthrough \
+		-Wno-unused-parameter
+
+# clang(1) is a little more zealous than gcc(1) with respect to some warnings.
+# Suppress those warnings (which, at least in the book code, relate to code
+# that is fine).
+
+ifeq ($(CC),clang)
+	IMPL_CFLAGS += -Wno-uninitialized -Wno-infinite-recursion \
+			-Wno-format-pedantic
+endif
+
++CFLAGS = ${IMPL_CFLAGS}
+
+IMPL_THREAD_FLAGS = -pthread
+
+IMPL_LDLIBS = ${TLPI_LIB}
+
+LDLIBS =
+
+RM = rm -f
+

 all : ${TLPI_LIB}

 OBJECTS=$(patsubst %.c,%.o,$(wildcard *.c))
+HDRS := $(wildcard *.h)  # Find all files with the .h extension

 ${TLPI_LIB} : ${OBJECTS}
 	${RM} ${TLPI_LIB}
@@ -23,3 +76,7 @@ ename.c.inc :

 clean :
 	${RM} *.o ename.c.inc ${TLPI_LIB}
+
+install:
+	cp ${HDRS} ${TLPI_INSTALL}/include
+	cp ${TLPI_LIB} ${TLPI_INSTALL}/lib
